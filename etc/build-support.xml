<?xml version="1.0"?>
<!-- defines a standard build script used by all of the nexus subprojects -->
<project name="build-support" default="compile" basedir="." xmlns:artifact="urn:maven-artifact-ant">
  <property name="src.dir"      value="src/main/java"/>
  <property name="test.dir"     value="src/test/java"/>
  <property name="deploy.dir"   value="dist"/>
  <property name="classes.dir"  value="${deploy.dir}/classes"/>
  <property name="tclasses.dir" value="${deploy.dir}/test-classes"/>

  <property name="maven-ant.vers" value="2.1.1"/>
  <property name="maven-ant.dir" value="${user.home}/.m2/ant-support"/>
  <property name="maven-ant.jar" value="${maven-ant.dir}/maven-ant-tasks-${maven-ant.vers}.jar"/>
  <property name="maven-ant.url"
            value="http://mirrors.ibiblio.org/pub/mirrors/apache/maven/binaries"/>
  <condition property="maven-ant.exists"><available file="${maven-ant.jar}"/></condition>
  <target name="-download-maven-ant" unless="maven-ant.exists">
    <mkdir dir="${maven-ant.dir}"/>
    <get src="${maven-ant.url}/maven-ant-tasks-${maven-ant.vers}.jar"
         dest="${maven-ant.jar}" usetimestamp="true"/>
  </target>

  <target name="-init-maven-ant" depends="-download-maven-ant">
    <taskdef resource="org/apache/maven/artifact/ant/antlib.xml"
             uri="urn:maven-artifact-ant" classpath="${maven-ant.jar}"/>
    <artifact:pom id="pom" file="pom.xml"/>
    <artifact:dependencies pathId="classpath" pomRefId="pom"/>
    <path id="test.classpath">
      <path refid="classpath"/>
      <pathelement location="${classes.dir}"/>
      <pathelement location="${tclasses.dir}"/>
    </path>
  </target>

  <target name="-prepare" depends="-init-maven-ant">
    <mkdir dir="${deploy.dir}"/>
  </target>

  <target name="clean" description="Cleans out build results.">
    <delete dir="${deploy.dir}"/>
  </target>

  <target name="-prep-gwt" if="build.copy-gwt-sources">
    <copy todir="${classes.dir}">
      <fileset dir="${src.dir}" includes="**/*.java"/>
    </copy>
    <copy todir="${tclasses.dir}">
      <fileset dir="${test.dir}" includes="**/*.java"/>
    </copy>
  </target>

  <target name="compile" depends="-prepare,-prep-gwt" description="Compiles the code.">
    <mkdir dir="${classes.dir}"/>
    <copy todir="${classes.dir}" failonerror="false">
      <fileset dir="src/main/resources" includes="**"/>
    </copy>
    <javac srcdir="${src.dir}" destdir="${classes.dir}" includeAntRuntime="false"
           debug="on" optimize="${build.optimize}" source="1.6" target="1.6" encoding="utf-8">
      <classpath refid="classpath"/>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
      <compilerarg value="-Xlint:rawtypes"/>
    </javac>

    <mkdir dir="${tclasses.dir}"/>
    <copy todir="${classes.dir}" failonerror="false">
      <fileset dir="src/test/resources" includes="**"/>
    </copy>
    <javac srcdir="${test.dir}" destdir="${tclasses.dir}" includeAntRuntime="false"
           debug="on" optimize="${build.optimize}" source="1.6" target="1.6" encoding="utf-8">
      <classpath refid="test.classpath"/>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
    </javac>
  </target>

  <target name="tests" depends="compile" description="Runs the unit tests.">
    <!-- allows passing -Dtest=NamePrefix to restrict to subset of tests -->
    <property name="test" value=""/>
    <!-- allows passing -Dgwt.log=TRACE to obtain GWT debug logging -->
    <property name="gwt.log" value="WARN"/>
    <!-- allows passing -Dgwt.mode=-prod to obtain GWT debug logging -->
    <property name="gwt.mode" value=""/>

    <mkdir dir="${deploy.dir}/test-reports"/>
    <property name="war.dir" value="${deploy.dir}/test-war"/>
    <!-- we have to fork, otherwise the classloader will not work for GWT -->
    <junit printsummary="off" haltonfailure="yes" fork="yes">
      <classpath refid="test.classpath"/>
      <sysproperty key="java.awt.headless" value="true"/>
      <sysproperty key="gwt.args" value="${gwt.mode} -logLevel ${gwt.log} -war ${war.dir}"/>
      <sysproperty key="com.samskivert.depot.debug" value="${debug}"/>
      <formatter type="brief" usefile="false"/>
      <formatter type="xml"/>
      <batchtest todir="${deploy.dir}/test-reports">
        <fileset dir="${test.dir}" includes="**/${test}*Test.java"/>
      </batchtest>
    </junit>
  </target>

  <target name="dist" depends="compile" description="Compiles code and builds jar file.">
    <jar destfile="${deploy.dir}/${ant.project.name}.jar" basedir="${classes.dir}"/>
  </target>

  <property name="maven.deploy.repo" value="file://${user.home}/.m2/repository"/>
  <target name="maven-deploy" depends="dist,tests" 
          description="Deploys our build artifacts to a Maven repository.">
    <jar basedir="${src.dir}" destfile="${deploy.dir}/${ant.project.name}-sources.jar"/>
    <artifact:deploy file="${deploy.dir}/${ant.project.name}.jar" uniqueVersion="false">
      <remoteRepository url="${maven.deploy.repo}"/>
      <pom refid="pom"/>
      <attach file="${deploy.dir}/${ant.project.name}-sources.jar" classifier="sources"/>
    </artifact:deploy>
  </target>
</project>
