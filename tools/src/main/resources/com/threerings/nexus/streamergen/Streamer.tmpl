{{#package}}
package {{package}};

{{/package}}
import com.threerings.nexus.io.Streamable;
import com.threerings.nexus.io.Streamer;
{{#imports}}
{{#-first}}

{{/-first}}
import {{.}};
{{/imports}}

/**
 * Handles the streaming of {@link {{outerName}}} and/or nested classes.
 */
public class Streamer_{{outerName}}{{#outer}}{{typeBounds}}{{/outer}}
{{#outer}}
{{^isAbstract}}
    implements Streamer<{{typeUse}}>
{{/isAbstract}}
{{/outer}}
{
{{#inners}}
    /**
     * Handles the streaming of {@link {{outerName}}.{{name}}} instances.
     */
    public static class {{name}}{{typeBounds}}
{{^isAbstract}}
        implements Streamer<{{typeUse}}>
{{/isAbstract}}
    {
{{^isAbstract}}
        @Override
        public Class<?> getObjectClass () {
            return {{outerName}}.{{name}}.class;
        }

        @Override
        public void writeObject (Streamable.Output out, {{typeUse}} obj) {
            writeObjectImpl(out, obj);
        }

        @Override
        public {{typeUse}} readObject (Streamable.Input in) {
            return new {{typeUse}}(
{{#reads}}
                in.{{vtype}}read{{fkind}}(){{^-last}},{{/-last}}
{{/reads}}
            );
        }

{{/isAbstract}}
        public static {{typeBounds}} void writeObjectImpl (Streamable.Output out, {{typeUse}} obj) {
{{#hasSuperWrite}}
            Streamer_{{parentEnclosedName}}.writeObjectImpl(out, obj);
{{/hasSuperWrite}}
{{#writes}}
            out.write{{fkind}}(obj.{{fname}});
{{/writes}}
        }
    }

{{/inners}}
{{#outer}}
{{^isAbstract}}
    @Override
    public Class<?> getObjectClass () {
        return {{name}}.class;
    }

    @Override
    public void writeObject (Streamable.Output out, {{typeUse}} obj) {
        writeObjectImpl(out, obj);
    }

    @Override
    public {{typeUse}} readObject (Streamable.Input in) {
        return new {{typeUse}}(
{{#reads}}
            in.{{vtype}}read{{fkind}}(){{^-last}},{{/-last}}
{{/reads}}
        );
    }

{{/isAbstract}}
    public static {{typeBounds}} void writeObjectImpl (Streamable.Output out, {{typeUse}} obj) {
{{#hasSuperWrite}}
        Streamer_{{parentEnclosedName}}.writeObjectImpl(out, obj);
{{/hasSuperWrite}}
{{#writes}}
        out.write{{fkind}}(obj.{{fname}});
{{/writes}}
    }
{{/outer}}
{{^outer}}
    // no streamer for non-Streamable enclosing class: {{outerName}}
{{/outer}}
}
